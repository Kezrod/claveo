---
const examples = [
  "envases de plástico 250 ml",
  "tornillería de acero",
  "mantenimiento industrial",
  "jabón antibacterial 135 g",
  "impresión en papel fotográfico",
];
---

<!-- 🧭 Header con botón -->
<header class="w-full flex items-center justify-end px-8 py-4 bg-bg text-text">
  <div class="flex items-center gap-8">
    <a href="/" class="text-white font-semibold hover:text-accent transition">Home</a>
    <a href="/planes" class="text-white font-semibold hover:text-accent transition">Planes</a>
    <a href="/login" class="bg-accent hover:bg-accent-hover transition px-4 py-2 rounded-lg font-semibold text-white text-sm">
      Iniciar sesión
    </a>
  </div>
</header>



<!-- 📦 Contenido original -->
<div class="min-h-screen flex flex-col items-center justify-center bg-bg text-text">
  <div class="text-center mb-8">
    <h1 class="text-4xl md:text-5xl font-extrabold">Claveo-MX</h1>
    <p class="text-muted mt-2">Buscador de claves del SAT</p>
  </div>

  <form class="flex items-center gap-3 bg-bg border border-border 
              rounded-xl px-4 py-3 shadow-lg focus-within:ring-2 focus-within:ring-accent">
    <span class="text-muted">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <circle cx="11" cy="11" r="7" stroke="currentColor" stroke-width="2"/>
        <path d="M20 20L16.65 16.65" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
      </svg>
    </span>

    <input 
      id="searchInput"
      type="search" 
      class="bg-transparent w-80 md:w-96 outline-none placeholder-muted text-base"
      placeholder="Buscar clave SAT"
      data-examples='["ejemplo1", "ejemplo2"]'
    />

    <button type="submit" class="bg-accent hover:bg-accent-hover transition px-4 py-2 rounded-lg font-semibold text-sm">
      Buscar
    </button>
  </form>
</div>

<script is:inline>
  const input = document.getElementById("searchInput");
  const examples = JSON.parse(input.dataset.examples);

  let exIndex = 0;
  let charIndex = 0;
  let deleting = false;

  function typeEffect(){
    const current = examples[exIndex];

    if(!deleting){
      input.placeholder = current.substring(0, charIndex + 1);
      charIndex++;
      if(charIndex === current.length){
        deleting = true;
        setTimeout(typeEffect, 1600); // pausa antes de borrar
        return;
      }
    } else {
      input.placeholder = current.substring(0, charIndex - 1);
      charIndex--;
      if(charIndex === 0){
        deleting = false;
        exIndex = (exIndex + 1) % examples.length;
      }
    }
    setTimeout(typeEffect, deleting ? 50 : 100);
  }

  typeEffect();
</script>
